name: Deployment

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  deployment:
    name: CD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

#      - name: Set outputs
#        id: vars
#        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        id: tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push APP image to Amazon ECR
        id: build-app-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_APP_NAME }}
          IMAGE_TAG: ${{ steps.tags.outputs.new_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./app/Dockerfile.prod ./app
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push NGINX image to Amazon ECR
        id: build-nginx-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_NGINX_NAME }}
          IMAGE_TAG: ${{ steps.vars.outputs.new_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./nginx
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG