name: CI/CD

on:
  push:
    branches: [ main ]
    tags: [ "*" ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  ci:
    name: Integration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Pipenv
        run: pip install pipenv

      - name: Install Dependencies
        working-directory: ./app
        run: pipenv install --dev

      - name: Run tests
        working-directory: ./app
        run: pipenv run python manage.py test

  cd:
    name: Deployment
    runs-on: ubuntu-latest
    needs:
      - ci
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set tag
        id: vars
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push APP image to Amazon ECR
        id: build-app-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_APP_NAME }}
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./app/Dockerfile.prod ./app
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push NGINX image to Amazon ECR
        id: build-nginx-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_NGINX_NAME }}
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./nginx
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
